<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uia="clr-namespace:UiPath.IPC.Activities;assembly=UiPath.IPC.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_dict_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_dt_status" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,2347.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IPC.Activities</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.WPFInteractive.Activities</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.Office.Core</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="84">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.WPFInteractive.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Callout.Activity</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IPC.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="This workflow contains the logic of the button's process." DisplayName="Process" sap:VirtualizedContainerService.HintSize="1386.4,2282.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Exception" Name="errorFound" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1344.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Process started&quot;]" />
    <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="1344.8,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_1" Message="Process running" PollingInterval="10" Timeout="0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uia:BroadcastMessage>
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" Window="{x:Null}" sap2010:Annotation.AnnotationText="Minimizes the Assistant if it's not already minimized. Feel free to delete this activity." ContinueOnError="True" DisplayName="Minimise UiPath Assistant" sap:VirtualizedContainerService.HintSize="1344.8,82.4" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="94eecaf2ad5704623a5283d543a7ebcc" Selector="&lt;wnd app='uipath.assistant.exe' omit:cls='Chrome_WidgetWin_1' title='UiPath Assistant' /&gt;" TimeoutMS="100">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MinimizeWindow Window="{x:Null}" ContinueOnError="True" DisplayName="Minimize Window" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MinimizeWindow_1" />
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WindowScope>
    <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." sap:VirtualizedContainerService.HintSize="1344.8,120" sap2010:WorkflowViewState.IdRef="Assign_39">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Your automation has finished!" + vbNewLine + vbNewLine + "Great job!"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Flowchart sap:VirtualizedContainerService.HintSize="1344.8,1428.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <Flowchart.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="list_ParentOutputFolder" />
      </Flowchart.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">460,12.4</av:Point>
          <av:Size x:Key="ShapeSize">60,75.2</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">490,87.6 490,125.6</av:PointCollection>
          <x:Double x:Key="Width">1311.1999999999998</x:Double>
          <x:Double x:Key="Height">1392</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID23</x:Reference>
      </Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">390,125.6</av:Point>
            <av:Size x:Key="ShapeSize">200,68.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">490,194.4 490,244.4</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Assigning values" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[out_dt_status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[new DataTable()]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:BuildDataTable DataTable="[out_dt_status]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;FilePath&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="333.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_3" Message="User selected options on the form" PollingInterval="10" Timeout="0">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uia:BroadcastMessage>
        </Sequence>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID7" sap2010:Annotation.AnnotationText="Password &amp; confirm password matched?" Condition="[io_dict_Config(&quot;str_Password&quot;).ToString.Equals(io_dict_Config(&quot;str_ConfirmPassword&quot;).ToString)]" DisplayName="" sap:VirtualizedContainerService.HintSize="147.2,131.2" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">416.4,244.4</av:Point>
                <av:Size x:Key="ShapeSize">147.2,131.2</av:Size>
                <av:PointCollection x:Key="FalseConnector">563.6,310 650,310</av:PointCollection>
                <av:PointCollection x:Key="TrueConnector">416.4,310 350,310 350,426.4</av:PointCollection>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowDecision x:Name="__ReferenceID6" Condition="[io_dict_Config(&quot;str_filetype&quot;).ToString.ToUpper.Equals(&quot;FILE&quot;)]" DisplayName="User selection?" sap:VirtualizedContainerService.HintSize="84.8,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">307.6,426.4</av:Point>
                    <av:Size x:Key="ShapeSize">84.8,87.2</av:Size>
                    <x:String x:Key="FalseLabel">Folder</x:String>
                    <x:String x:Key="TrueLabel">File</x:String>
                    <av:PointCollection x:Key="TrueConnector">307.6,470 270,470 270,566.4</av:PointCollection>
                    <av:PointCollection x:Key="FalseConnector">392.4,470 910,470 910,686.4</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowDecision.True>
                  <FlowDecision x:Name="__ReferenceID10" Condition="[io_dict_Config(&quot;str_FilePath&quot;).ToString=&quot;&quot;]" DisplayName="Input File path empty?" sap:VirtualizedContainerService.HintSize="124,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <av:Point x:Key="ShapeLocation">208,566.4</av:Point>
                        <av:Size x:Key="ShapeSize">124,87.2</av:Size>
                        <av:PointCollection x:Key="FalseConnector">332,610 400,610 400,1136.4</av:PointCollection>
                        <av:PointCollection x:Key="TrueConnector">208,610 150,610 150,725.6</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">50,725.6</av:Point>
                            <av:Size x:Key="ShapeSize">200,288.8</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">150,1014.4 150,1060</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="200,288.8" sap2010:WorkflowViewState.IdRef="BroadcastMessage_5" Message="Input file path is not provided" PollingInterval="10" Timeout="0">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </uia:BroadcastMessage>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">18.8,1060</av:Point>
                                <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">150,1120 150,1170</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["Input file path is not provided"]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">18.8,1170</av:Point>
                                    <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign output folder path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[io_dict_Config("outputFolderPath")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowDecision x:Name="__ReferenceID2" Condition="[io_dict_Config(&quot;str_FilePath&quot;).ToString.ToUpper.Contains(&quot;.XLS&quot;)]" DisplayName="File Extension" sap:VirtualizedContainerService.HintSize="77.6,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <av:Point x:Key="ShapeLocation">361.2,1136.4</av:Point>
                            <av:Size x:Key="ShapeSize">77.6,87.2</av:Size>
                            <av:PointCollection x:Key="FalseConnector">438.8,1180 550,1180</av:PointCollection>
                            <av:PointCollection x:Key="TrueConnector">361.2,1180 330,1180 330,1266.4</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <FlowDecision.True>
                          <FlowDecision x:Name="__ReferenceID3" Condition="[io_dict_Config(&quot;str_ChooseAction&quot;).ToString.Equals(&quot;Protect&quot;)]" DisplayName="Choose Action" sap:VirtualizedContainerService.HintSize="82.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <av:Point x:Key="ShapeLocation">288.8,1266.4</av:Point>
                                <av:Size x:Key="ShapeSize">82.4,87.2</av:Size>
                                <av:PointCollection x:Key="TrueConnector">288.8,1310 210,1310</av:PointCollection>
                                <av:PointCollection x:Key="FalseConnector">371.2,1310 470,1310</av:PointCollection>
                                <x:String x:Key="TrueLabel">Protect</x:String>
                                <x:String x:Key="FalseLabel">Unprotect</x:String>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <FlowDecision.True>
                              <FlowStep x:Name="__ReferenceID4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">10,1275.6</av:Point>
                                    <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Protect" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="512,1705.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="475.2,1134.4" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign output folder path" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[io_dict_Config("outputFolderPath")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="433.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_12" Message="[&quot;Protecting &quot;+Path.GetFilename(io_dict_Config(&quot;str_FilePath&quot;).ToString)]" PollingInterval="10" Timeout="0">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </uia:BroadcastMessage>
                                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,194.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[io_dict_Config(&quot;str_FilePath&quot;).ToString]">
                                          <ui:ExcelApplicationScope.Body>
                                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ExcelApplicationScope.Body>
                                        </ui:ExcelApplicationScope>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5);&#xA;&#x9;&#xA;&#x9;wb.Password = in_Password;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - Protect " sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                                          <ui:InvokeCode.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[io_dict_Config("str_FilePath").ToString]</InArgument>
                                            <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">[errorFound]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Password">[io_dict_Config("str_Password").ToString]</InArgument>
                                          </ui:InvokeCode.Arguments>
                                        </ui:InvokeCode>
                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(io_dict_Config(&quot;str_FilePath&quot;).ToString),&quot;Successfully protected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="478.4,258.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(io_dict_Config(&quot;str_FilePath&quot;).ToString),&quot;File is already protected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="512,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Successfully protected&quot;]" />
                                </Sequence>
                              </FlowStep>
                            </FlowDecision.True>
                            <FlowDecision.False>
                              <FlowStep x:Name="__ReferenceID5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">470,1275.6</av:Point>
                                    <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="UnProtect" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,1471.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,900" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign output folder path" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[io_dict_Config("outputFolderPath")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                        <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="333.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_13" Message="[&quot;Unprotecting &quot;+Path.GetFilename(io_dict_Config(&quot;str_FilePath&quot;).ToString)]" PollingInterval="10" Timeout="0">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </uia:BroadcastMessage>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5,in_Password);&#xA;&#x9;&#xA;&#x9;wb.Password = &quot;&quot;;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - UnProtect " sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                                          <ui:InvokeCode.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[io_dict_Config("str_FilePath").ToString]</InArgument>
                                            <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">[errorFound]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Password">[io_dict_Config("str_Password").ToString]</InArgument>
                                          </ui:InvokeCode.Arguments>
                                        </ui:InvokeCode>
                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(io_dict_Config(&quot;str_FilePath&quot;).ToString),&quot;Successfully unprotected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,258.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(io_dict_Config(&quot;str_FilePath&quot;).ToString),&quot;File is already unprotected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <ui:LogMessage DisplayName="Log Message-&quot;Successfully unprotected&quot;" sap:VirtualizedContainerService.HintSize="436.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Successfully unprotected&quot;]" />
                                </Sequence>
                              </FlowStep>
                            </FlowDecision.False>
                          </FlowDecision>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">550,1168.8</av:Point>
                                <av:Size x:Key="ShapeSize">200,22.4</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Throw Exception="[new Exception(&quot;File extension is not .xls or .xlsx&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowDecision x:Name="__ReferenceID9" Condition="[io_dict_Config(&quot;str_FolderPath&quot;).ToString=&quot;&quot;]" DisplayName="Input folder path empty?" sap:VirtualizedContainerService.HintSize="137.6,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <av:Point x:Key="ShapeLocation">841.2,686.4</av:Point>
                        <av:Size x:Key="ShapeSize">137.6,87.2</av:Size>
                        <av:PointCollection x:Key="FalseConnector">978.8,730 1038.8,730</av:PointCollection>
                        <av:PointCollection x:Key="TrueConnector">841.2,730 760,730</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">560,585.6</av:Point>
                            <av:Size x:Key="ShapeSize">200,288.8</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">660,874.4 660,940</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="200,288.8" sap2010:WorkflowViewState.IdRef="BroadcastMessage_4" Message="Input folder path is not provided" PollingInterval="10" Timeout="0">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </uia:BroadcastMessage>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">528.8,940</av:Point>
                                <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">660,1000 660,1050</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["Input folder path is not provided"]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID18">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">528.8,1050</av:Point>
                                    <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign output folder path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[io_dict_Config("outputFolderPath")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">1038.8,700</av:Point>
                            <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">1170,760 1170,810</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">["No workbooks found in designated folder."]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">1038.8,810</av:Point>
                                <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">1170,870 1170,936.4</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign output folder path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_dict_Config("outputFolderPath")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[io_dict_Config("str_FolderPath").ToString]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID13" Condition="[convert.ToBoolean(io_dict_Config(&quot;str_Subfolder_protect&quot;).ToString)=True]" DisplayName="Subfolder check?" sap:VirtualizedContainerService.HintSize="96,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <av:Point x:Key="ShapeLocation">1122,936.4</av:Point>
                                    <av:Size x:Key="ShapeSize">96,87.2</av:Size>
                                    <av:PointCollection x:Key="FalseConnector">1218,980 1248,980 1248,1090 1050,1090</av:PointCollection>
                                    <av:PointCollection x:Key="TrueConnector">1122,980 1050,980</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <FlowDecision.True>
                                  <FlowStep x:Name="__ReferenceID14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">850,945.6</av:Point>
                                        <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                                        <av:PointCollection x:Key="ConnectorLocation">950,1014.4 950,1063.6</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Subfolder Loop" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1098.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Looping through sub folders in pdf protect &amp; unprotect&quot;]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="1098.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:List(x:String)">[list_ParentOutputfolder]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:List(x:String)">[Directory.GetDirectories(io_dict_Config("str_FolderPath").ToString).ToList]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each file in subfolder" sap:VirtualizedContainerService.HintSize="1098.4,2363.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[list_ParentOutputfolder]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="x:String">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
                                            </ActivityAction.Argument>
                                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1063.2,2238.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(folder)]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="x:Object">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                                                  </ActivityAction.Argument>
                                                  <If Condition="[file.ToString.ToUpper.Contains(&quot;.XLS&quot;)]" sap:VirtualizedContainerService.HintSize="1028,2113.6" sap2010:WorkflowViewState.IdRef="If_6">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <If Condition="[io_dict_Config(&quot;str_ChooseAction&quot;).ToString.Equals(&quot;Protect&quot;)]" sap:VirtualizedContainerService.HintSize="992.8,1924.8" sap2010:WorkflowViewState.IdRef="If_5">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If.Then>
                                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="512,1765.6" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="475.2,1194.4" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">["Your automation has finished!" + vbNewLine + vbNewLine + "Great job!"]</InArgument>
                                                                  </Assign.Value>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Assign>
                                                                <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="433.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_18" Message="[&quot;Protecting &quot;+Path.GetFilename(file.ToString)]" PollingInterval="10" Timeout="0">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </uia:BroadcastMessage>
                                                                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,194.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[file.ToString]">
                                                                  <ui:ExcelApplicationScope.Body>
                                                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ExcelApplicationScope.Body>
                                                                </ui:ExcelApplicationScope>
                                                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5);&#xA;&#x9;&#xA;&#x9;wb.Password = in_Password;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - Protect " sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_7" Language="CSharp">
                                                                  <ui:InvokeCode.Arguments>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[file.ToString]</InArgument>
                                                                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">[errorFound]</OutArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_Password">[io_dict_Config("str_Password").ToString]</InArgument>
                                                                  </ui:InvokeCode.Arguments>
                                                                </ui:InvokeCode>
                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;Successfully protected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_13" />
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="478.4,258.4" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;File is already protected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_14" />
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                        </If.Then>
                                                        <If.Else>
                                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,1531.2" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,960" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="333.6,120" sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">["Your automation has finished!" + vbNewLine + vbNewLine + "Great job!"]</InArgument>
                                                                  </Assign.Value>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Assign>
                                                                <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="333.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_19" Message="[&quot;Unprotecting &quot;+Path.GetFilename(file.ToString)]" PollingInterval="10" Timeout="0">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </uia:BroadcastMessage>
                                                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5,in_Password);&#xA;&#x9;&#xA;&#x9;wb.Password = &quot;&quot;;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - UnProtect " sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_8" Language="CSharp">
                                                                  <ui:InvokeCode.Arguments>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[file.ToString]</InArgument>
                                                                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">[errorFound]</OutArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_Password">[io_dict_Config("str_Password").ToString]</InArgument>
                                                                  </ui:InvokeCode.Arguments>
                                                                </ui:InvokeCode>
                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;Successfully unprotected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_15" />
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,258.4" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;File is already unprotected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_16" />
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                  </If>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                            </ui:ForEach>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEach>
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID0">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">850,1063.6</av:Point>
                                            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each folder" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Directory.GetFiles(io_dict_Config(&quot;str_FolderPath&quot;).ToString)]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:Object">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                                              </ActivityAction.Argument>
                                              <If Condition="[file.ToString.ToUpper.Contains(&quot;.XLS&quot;)]" sap:VirtualizedContainerService.HintSize="1028,2113.6" sap2010:WorkflowViewState.IdRef="If_4">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <If Condition="[io_dict_Config(&quot;str_ChooseAction&quot;).ToString.Equals(&quot;Protect&quot;)]" sap:VirtualizedContainerService.HintSize="992.8,1924.8" sap2010:WorkflowViewState.IdRef="If_3">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="512,1765.6" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <TryCatch.Try>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="475.2,1194.4" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">["Your automation has finished!" + vbNewLine + vbNewLine + "Great job!"]</InArgument>
                                                              </Assign.Value>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </Assign>
                                                            <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="433.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_16" Message="[&quot;Protecting &quot;+Path.GetFilename(file.ToString)]" PollingInterval="10" Timeout="0">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </uia:BroadcastMessage>
                                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,194.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[file.ToString]">
                                                              <ui:ExcelApplicationScope.Body>
                                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ExcelApplicationScope.Body>
                                                            </ui:ExcelApplicationScope>
                                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5);&#xA;&#x9;&#xA;&#x9;wb.Password = in_Password;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - Protect " sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
                                                              <ui:InvokeCode.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[file.ToString]</InArgument>
                                                                <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">[errorFound]</OutArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_Password">[io_dict_Config("str_Password").ToString]</InArgument>
                                                              </ui:InvokeCode.Arguments>
                                                            </ui:InvokeCode>
                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;Successfully protected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="478.4,258.4" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;File is already protected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_10" />
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                    </If.Then>
                                                    <If.Else>
                                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,1531.2" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <TryCatch.Try>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,960" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="333.6,120" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">["Your automation has finished!" + vbNewLine + vbNewLine + "Great job!"]</InArgument>
                                                              </Assign.Value>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </Assign>
                                                            <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="333.6,274.4" sap2010:WorkflowViewState.IdRef="BroadcastMessage_17" Message="[&quot;Unprotecting &quot;+Path.GetFilename(file.ToString)]" PollingInterval="10" Timeout="0">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </uia:BroadcastMessage>
                                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;Microsoft.Office.Interop.Excel.Application app = new Microsoft.Office.Interop.Excel.Application();&#xA;&#x9;&#xA;&#x9;var wb = app.Workbooks.Open(in_FilePath,3,false,5,in_Password);&#xA;&#x9;&#xA;&#x9;wb.Password = &quot;&quot;;&#xA;&#x9;wb.Save();&#xA;&#x9;wb.Close();&#xA;&#x9;&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;out_Exception = e;&#xA;&#x9;Console.WriteLine(e.Message.ToString()+&quot; &quot;+e.Source.ToString());&#xA;}&#xA;" DisplayName="Invoke code - UnProtect " sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_6" Language="CSharp">
                                                              <ui:InvokeCode.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[file.ToString]</InArgument>
                                                                <OutArgument x:TypeArguments="s:Exception" x:Key="out_Exception">[errorFound]</OutArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_Password">[io_dict_Config("str_Password").ToString]</InArgument>
                                                              </ui:InvokeCode.Arguments>
                                                            </ui:InvokeCode>
                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;Successfully unprotected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_11" />
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,258.4" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFilename(file.ToString),&quot;File is already unprotected&quot;}]" DataTable="[out_dt_status]" DisplayName="Add Data Row for final form display" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_12" />
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                    </If.Else>
                                                  </If>
                                                </If.Then>
                                              </If>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                        </ui:ForEach>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.True>
                                <FlowDecision.False>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowDecision.False>
              </FlowDecision>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">650,165.6</av:Point>
                    <av:Size x:Key="ShapeSize">200,288.8</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">850,310 928.8,310</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <uia:BroadcastMessage ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Use Broadcast Message with the statusWindowChannel key to update the status window message. &#xA;&#xA;Just copy this activity and update the Message property with what you'd like the status window to say. &#xA;&#xA;Your message will remain until the next update is received or the automatione ends." Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="200,288.8" sap2010:WorkflowViewState.IdRef="BroadcastMessage_2" Message="Invalid password provided" PollingInterval="10" Timeout="0">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uia:BroadcastMessage>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">928.8,280</av:Point>
                        <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">1060,340 1060,390</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign result on finalform" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Invalid password provided"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">928.8,390</av:Point>
                            <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_dict_Config("outputFolderPath")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
      <x:Reference>__ReferenceID17</x:Reference>
      <x:Reference>__ReferenceID18</x:Reference>
      <x:Reference>__ReferenceID19</x:Reference>
      <x:Reference>__ReferenceID20</x:Reference>
      <x:Reference>__ReferenceID21</x:Reference>
      <x:Reference>__ReferenceID22</x:Reference>
    </Flowchart>
  </Sequence>
</Activity>